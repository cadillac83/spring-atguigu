package com.hevispring.aop.helloworld;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

public class CalculateLoggingProxy {

	private Calculate target;
	
	
	
	public CalculateLoggingProxy(Calculate target) {
		super();
		this.target = target;
	}



	public Calculate getLoggingProxy() {
		
		Calculate proxy = null;
		
		Proxy.newProxyInstance(Calculate.class.getClassLoader(), new Class[]{Calculate.class}, new InvocationHandler() {
			
			public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
				
				System.out.println("doing:"+args[0]+method.getName()+args[1]);
				this.invoke(proxy, method, args);
				
				return null;
			}
		});
		
		return proxy;
	}
}
